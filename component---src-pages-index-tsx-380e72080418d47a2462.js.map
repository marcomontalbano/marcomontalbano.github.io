{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["IndexPage","projects","allRepositories","nodes","map","node","id","name","title","customFields","description","src","cover","url","Wrapper","children","to","forceSolid","tiles"],"mappings":"ipyDA8DeA,UAXG,WACd,IAAMC,EA3CO,OA0BTC,gBAAmBC,MAGaC,KAChC,SAACC,GAAD,MAA2B,CACvBC,GAAID,EAAKE,KACTC,MAAOH,EAAKI,aAAaD,MACzBE,YAAaL,EAAKK,YAClBC,IAAKN,EAAKI,aAAaG,MAAMC,IAC7BC,QAAS,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAAC,OAAD,CAAMC,GAAE,YAAcX,EAAKE,MAASQ,QAUvE,OACI,kBAAC,IAAD,CAAQE,YAAY,GAChB,kBAAC,IAAD,CAAKT,MAAM,SACX,kBAAC,IAAD,CAAUU,MAAOjB","file":"component---src-pages-index-tsx-380e72080418d47a2462.js","sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { TileList, TileProps } from '@marcomontalbano/component-library'\n\nconst useProjects = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allRepositories(filter: { customFields: { visible: { eq: true } } }) {\n                nodes {\n                    name\n                    url\n                    createdAt\n                    customFields {\n                        cover {\n                            url\n                        }\n                        forkCount\n                        starCount\n                        repositoryTopics\n                        title\n                        readme {\n                            source\n                        }\n                    }\n                    description\n                }\n            }\n        }\n    `)\n\n    const {\n        allRepositories: { nodes },\n    } = data\n\n    const projects: TileProps[] = nodes.map(\n        (node: any): TileProps => ({\n            id: node.name,\n            title: node.customFields.title,\n            description: node.description,\n            src: node.customFields.cover.url,\n            Wrapper: ({ children }) => <Link to={`/project/${node.name}`}>{children}</Link>,\n        })\n    )\n\n    return projects\n}\n\nconst IndexPage = () => {\n    const projects = useProjects()\n\n    return (\n        <Layout forceSolid={false}>\n            <SEO title=\"Home\" />\n            <TileList tiles={projects} />\n        </Layout>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}