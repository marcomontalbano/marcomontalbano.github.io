---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro'

export async function getStaticPaths() {
  const blogEntries = await getCollection('project');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry: project } = Astro.props;
const { Content, headings } = await project.render();
const title = headings.find(h => h.depth === 1)?.text ?? project.slug
---

<Layout
  title={title}
  description={project.data.description}
  hero={{
    title,
    description: project.data.description,
    img: project.data.cover,
    repoUrl: project.data.repoUrl,
    homepageUrl: project.data.homepageUrl
  }}
>
  <main>
    <Content />
  </main>
</Layout>

<style>
  main {
    h1 { @apply hidden font-semibold text-3xl mt-10 mb-4; }
    h2 { @apply font-semibold text-2xl mt-8 mb-3; }
    h3 { @apply font-semibold text-xl mt-6 mb-2; }
    h4 { @apply font-semibold text-lg mt-6 mb-1; }
    a {
      @apply inline-block text-brand-link underline break-all;
    }
    p {
      @apply my-4;
    }
    hr {
      @apply my-4;
    }
    blockquote {
      @apply px-4 border-l-4 border-[#d0d7de] text-[#636c76] dark:border-l-[#444c56] dark:text-[#717e8b];
    }
    code {
      @apply rounded py-1 px-2 break-all;
      @apply bg-slate-100 text-slate-500 dark:bg-[#24292e] dark:text-slate-400;
    }
    pre.astro-code {
      @apply p-4 rounded-md my-2;

      code {
        @apply bg-transparent p-0;
      }
    }
    video {
      @apply w-full !max-h-full;
    }
    ul {
      @apply px-8;

      li {
        @apply list-disc my-2;
      }
    }
    ul.contains-task-list {
      @apply px-2;

      li {
        @apply list-none flex items-center gap-2;

        input[type="checkbox"] {
          @apply w-4 h-4 text-blue-600;
        }
      }
    }
    p:has(> img + img) {
      @apply flex flex-wrap gap-4;
    }

    img + img, img:has(+ img) {
      @apply grow shrink;
    }

    table {
      @apply w-full mt-4 mb-6;

      thead th {
        @apply p-4 text-xs uppercase border-b border-[#404b55] bg-[#24292e] text-gray-400 first-of-type:rounded-ss-md last-of-type:rounded-se-md;
      }

      tbody td {
        @apply p-4 text-sm border-b border-[#404b55];
      }
    }

    .markdown-alert {
      @apply border-l-4 py-2 px-4 mb-8 border-[#d0d7de] dark:border-[#444c56];

      p {
        @apply m-0;

        &.markdown-alert-title {
          @apply mb-2 font-bold flex items-center;

          .octicon {
            @apply w-4 h-4 inline-block text-current;
            margin-right: 0.5rem;
            overflow: visible !important;

            -webkit-mask: var(--oct-icon) no-repeat;
            mask: var(--oct-icon) no-repeat;
            -webkit-mask-size: 100% 100%;
            mask-size: 100% 100%;
            background-color: currentColor;
            color: inherit;
            display: inline-block;
            vertical-align: text-bottom;
            width: 1em;
            height: 1em;
          }
        }
      }

      &.markdown-alert-note {
        @apply border-[#0969da] dark:border-[#478be6];
        .markdown-alert-title {
          @apply text-[#0969da] dark:text-[#478be6];
        }
      }

      &.markdown-alert-tip {
        @apply border-[#1a7f37] dark:border-[#57ab5a];
        .markdown-alert-title {
          @apply text-[#1a7f37] dark:text-[#57ab5a];
        }
      }

      &.markdown-alert-important {
        @apply border-[#8250df] dark:border-[#986ee2];
        .markdown-alert-title {
          @apply text-[#8250df] dark:text-[#986ee2];
        }
      }

      &.markdown-alert-warning {
        @apply border-[#9a6700] dark:border-[#c69026];
        .markdown-alert-title {
          @apply text-[#9a6700] dark:text-[#c69026];
        }
      }

      &.markdown-alert-caution {
        @apply border-[#d1242f] dark:border-[#e5534b];
        .markdown-alert-title {
          @apply text-[#d1242f] dark:text-[#e5534b];
        }
      }
    }
  }
</style>